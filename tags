!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Component	decorator.php	/^abstract class Component$/;"	c
ConcreteComponent	decorator.php	/^class ConcreteComponent extends Component$/;"	c
ConcreteDecoratorA	decorator.php	/^class ConcreteDecoratorA extends Decorator$/;"	c
ConcreteDecoratorB	decorator.php	/^class ConcreteDecoratorB extends Decorator$/;"	c
ConcretePrototype	prototype.php	/^class ConcretePrototype$/;"	c
ConcreteStrategyA	factory_strategy.php	/^class ConcreteStrategyA extends Strategy$/;"	c
ConcreteStrategyA	strategy.php	/^class ConcreteStrategyA extends Strategy$/;"	c
ConcreteStrategyB	factory_strategy.php	/^class ConcreteStrategyB extends Strategy$/;"	c
Context	factory_strategy.php	/^class Context$/;"	c
Context	strategy.php	/^class Context$/;"	c
Decorator	decorator.php	/^abstract class Decorator extends Component$/;"	c
Operation	factory.php	/^class Operation$/;"	c
OperationAdd	factory.php	/^class OperationAdd extends Operation$/;"	c
OperationFactory	factory.php	/^class OperationFactory$/;"	c
Prototype	prototype.php	/^class Prototype$/;"	c
Proxy	proxy.php	/^class Proxy implements Subject$/;"	c
RealSubject	proxy.php	/^class RealSubject implements Subject$/;"	c
Strategy	factory_strategy.php	/^abstract class Strategy$/;"	c
Strategy	strategy.php	/^abstract class Strategy$/;"	c
Subject	proxy.php	/^interface Subject$/;"	i
__clone	prototype.php	/^	function __clone()$/;"	f
__clone	prototype.php	/^	public function __clone()$/;"	f
__construct	factory_strategy.php	/^	public function __construct(string $type)$/;"	f
__construct	prototype.php	/^	public function __construct()$/;"	f
__construct	strategy.php	/^	public function __construct(Strategy $strategy)$/;"	f
a	decorator.php	/^$a = new ConcreteDecoratorA();$/;"	v
addedBehavior	decorator.php	/^	public function addedBehavior()$/;"	f
added_state	decorator.php	/^		$added_state = 'New State';$/;"	v
added_state	decorator.php	/^	private $added_state;$/;"	v
algorithmInterface	factory_strategy.php	/^	abstract public function algorithmInterface();$/;"	f
algorithmInterface	factory_strategy.php	/^	public function algorithmInterface()$/;"	f
algorithmInterface	strategy.php	/^	abstract public function algorithmInterface();$/;"	f
algorithmInterface	strategy.php	/^	public function algorithmInterface() $/;"	f
b	decorator.php	/^$b = new ConcreteDecoratorB();$/;"	v
c	decorator.php	/^$c = new ConcreteComponent();$/;"	v
clone	prototype.php	/^$clone = clone $prototype;$/;"	v
component	decorator.php	/^		$this->component = $component;$/;"	v
component	decorator.php	/^	protected $component;$/;"	v
context	strategy.php	/^$context = new Context(new ConcreteStrategyA());$/;"	v
contextInterface	strategy.php	/^	public function contextInterface()$/;"	f
context_a	factory_strategy.php	/^$context_a = new Context('A');$/;"	v
context_b	factory_strategy.php	/^$context_b = new Context('B');$/;"	v
createOperate	factory.php	/^	public static function createOperate(string $operate) $/;"	f
getResult	factory.php	/^	public function getResult() {$/;"	f
getResult	factory_strategy.php	/^	public function getResult()$/;"	f
instance	prototype.php	/^		$this->instance = ++self::$instances;$/;"	v
instance	prototype.php	/^	public $instance;$/;"	v
instances	prototype.php	/^	static $instances = 0;$/;"	v
numberA	factory.php	/^	public function numberA($value = null)$/;"	f
numberB	factory.php	/^	public function numberB($value = null)$/;"	f
number_a	factory.php	/^			$this->number_a = $value;$/;"	v
number_a	factory.php	/^	protected $number_a = 0;$/;"	v
number_b	factory.php	/^			$this->number_b = $value;$/;"	v
number_b	factory.php	/^	protected $number_b = 0;$/;"	v
obj1	prototype.php	/^		$this->obj1 = clone $this->obj1;$/;"	v
obj1	prototype.php	/^	public $obj1;$/;"	v
obj2	prototype.php	/^	public $obj2;$/;"	v
oper	factory.php	/^				$oper = new OperationAdd();$/;"	v
oper	factory.php	/^				$oper = null;$/;"	v
oper	factory.php	/^$oper = OperationFactory::createOperate('+');$/;"	v
operation	decorator.php	/^	abstract public function operation();$/;"	f
operation	decorator.php	/^	public function operation()$/;"	f
prototype	prototype.php	/^$prototype = new ConcretePrototype();$/;"	v
proxy	proxy.php	/^$proxy = new Proxy();$/;"	v
real_request	proxy.php	/^			$this->real_request = new RealSubject();$/;"	v
real_request	proxy.php	/^	protected $real_request;$/;"	v
request	proxy.php	/^	public function request()$/;"	f
request	proxy.php	/^	public function request();$/;"	f
result	factory.php	/^		$result = $this->number_a + $this->number_b;$/;"	v
result	factory.php	/^		$result = 0;$/;"	v
setComponent	decorator.php	/^	public function setComponent(Component $component)$/;"	f
strategy	factory_strategy.php	/^				$this->strategy = new ConcreteStrategyA();$/;"	v
strategy	factory_strategy.php	/^				$this->strategy = new ConcreteStrategyB();$/;"	v
strategy	factory_strategy.php	/^	protected $strategy;$/;"	v
strategy	strategy.php	/^		$this->strategy = $strategy;$/;"	v
strategy	strategy.php	/^	protected $strategy;$/;"	v
